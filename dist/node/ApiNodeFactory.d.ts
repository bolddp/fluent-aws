import { KmsKeyCollection } from './../kms/KmsKeyCollection';
import { SystemsManagerParameterCollection } from './../ssm/SystemsManagerParameterCollection';
import { CloudFormationStack } from './../cf/CloudFormationStack';
import { Route53RecordSetCollection } from './../route53/Route53RecordSetCollection';
import { ApiNode } from './ApiNode';
import { S3 } from '../s3/S3';
import { Ecs } from '../ecs/Ecs';
import { Ec2 } from '../ec2/Ec2';
import { S3Bucket } from '../s3/S3Bucket';
import { EcsCluster } from '../ecs/EcsCluster';
import { EcsTask } from '../ecs/EcsTask';
import { Ec2Instance } from '../ec2/Ec2Instance';
import { S3Object } from '../s3/S3Object';
import { AutoScaling } from '../autoScaling/AutoScaling';
import { AutoScalingGroup } from '../autoScaling/AutoScalingGroup';
import { Ec2InstanceCollection } from '../ec2/Ec2InstanceCollection';
import { AutoScalingGroupCollection } from '../autoScaling/AutoScalingGroupCollection';
import { EcsServiceCollection } from '../ecs/EcsServiceCollection';
import { EcsService } from '../ecs/EcsService';
import { EcsClusterCollection } from '../ecs/EcsClusterCollection';
import { EcsTaskCollection } from '../ecs/EcsTaskCollection';
import { S3BucketCollection } from '../s3/S3BucketCollection';
import { S3ObjectCollection } from '../s3/S3ObjectCollection';
import { IamRole } from '../iam/IamRole';
import { Route53HealthCheck } from '../route53/Route53HealthCheck';
import { Route53HealthCheckCollection } from '../route53/Route53HealthCheckCollection';
import { Route53 } from '../route53/Route53';
import { DynamoDbTable } from '../dynamoDb/DynamoDbTable';
import { DynamoDbTableCollection } from '../dynamoDb/DynamoDbTableCollection';
import { DynamoDb } from '../dynamoDb/DynamoDb';
import { Route53HostedZone } from '../route53/Route53HostedZone';
import { Route53HostedZoneCollection } from '../route53/Route53HostedZoneCollection';
import { CloudFormation } from '../cf/CloudFormation';
import { CloudFormationStackCollection } from '../cf/CloudFormationStackCollection';
import { SystemsManager } from '../ssm/SystemsManager';
import { SystemsManagerParameter } from '../ssm/SystemsManagerParameter';
import { Kms } from '../kms/Kms';
import { KmsKey } from '../kms/KmsKey';
import { KmsAliasCollection } from '../kms/KmsAliasCollection';
import { KmsAlias } from '../kms/KmsAlias';
import { Cognito } from '../cognito/Cognito';
import { CognitoUserPoolCollection } from '../cognito/CognitoUserPoolCollection';
import { CognitoUserPoolId, CognitoUserPool } from '../cognito/CognitoUserPool';
import { SnsTopicCollection } from '../sns/SnsTopicCollection';
import { SnsTopic } from '../sns/SnsTopic';
import { Sns } from '../sns/Sns';
import { CognitoUser } from '../cognito/CognitoUser';
import { CognitoUserCollection } from '../cognito/CognitoUserCollection';
import { Sqs } from '../sqs/Sqs';
import { SqsQueueCollection } from '../sqs/SqsQueueCollection';
import { SqsQueue } from '../sqs/SqsQueue';
export declare class ApiNodeFactory {
    static iamRole(parent: ApiNode, name: string): IamRole;
    static autoScaling(parent: ApiNode): AutoScaling;
    static autoScalingGroup(parent: ApiNode, name: string): AutoScalingGroup;
    static autoScalingGroupCollection(parent: ApiNode): AutoScalingGroupCollection;
    static s3(parent: ApiNode): S3;
    static s3Bucket(parent: ApiNode, name: string): S3Bucket;
    static s3BucketCollection(parent: ApiNode): S3BucketCollection;
    static s3Object(parent: ApiNode, bucketName: string, key: string): S3Object;
    static s3ObjectCollection(parent: ApiNode, bucketName: string, prefix: string): S3ObjectCollection;
    static ecs(parent: ApiNode): Ecs;
    static ecsCluster(parent: ApiNode, idOrArn: string): EcsCluster;
    static ecsClusterCollection(parent: ApiNode): EcsClusterCollection;
    static ecsTask(parent: ApiNode, clusterId: string, idOrArn: string): EcsTask;
    static ecsTaskCollection(parent: ApiNode, clusterId: string): EcsTaskCollection;
    static ecsService(parent: ApiNode, clusterId: string, name: string): EcsService;
    static ecsServiceCollection(parent: ApiNode, clusterId: string): EcsServiceCollection;
    static ec2(parent: ApiNode): Ec2;
    static ec2Instance(parent: ApiNode, instanceId: string): Ec2Instance;
    static ec2InstanceCollection(parent: ApiNode): Ec2InstanceCollection;
    static route53(parent: ApiNode): Route53;
    static route53HealthCheck(parent: ApiNode, id: string): Route53HealthCheck;
    static route53HealthCheckCollection(parent: ApiNode): Route53HealthCheckCollection;
    static route53HostedZone(parent: ApiNode, id: string): Route53HostedZone;
    static route53HostedZoneCollection(parent: ApiNode): Route53HostedZoneCollection;
    static route53RecordSetCollection(parent: ApiNode, hostedZoneId: string): Route53RecordSetCollection;
    static dynamoDb(parent: ApiNode): DynamoDb;
    static dynamoDbTableCollection(parent: ApiNode): DynamoDbTableCollection;
    static dynamoDbTable(parent: ApiNode, name: string): DynamoDbTable;
    static cloudFormation(parent: ApiNode): CloudFormation;
    static cloudFormationStackCollection(parent: ApiNode): CloudFormationStackCollection;
    static cloudFormationStack(parent: ApiNode, stackName: string): CloudFormationStack;
    static systemsManager(parent: ApiNode): SystemsManager;
    static systemsManagerParameterCollection(parent: ApiNode): SystemsManagerParameterCollection;
    static systemsManagerParameter(parent: ApiNode, name: string): SystemsManagerParameter;
    static kms(parent: ApiNode): Kms;
    static kmsKeyCollection(parent: ApiNode): KmsKeyCollection;
    static kmsKey(parent: ApiNode, id: string): KmsKey;
    static kmsAliasCollection(parent: ApiNode): KmsAliasCollection;
    static kmsAlias(parent: ApiNode, id: string): KmsAlias;
    static cognito(parent: ApiNode): Cognito;
    static cognitoUserPoolCollection(parent: ApiNode): CognitoUserPoolCollection;
    static cognitoUserPool(parent: ApiNode, id: CognitoUserPoolId): CognitoUserPool;
    static cognitoUserCollection(parent: ApiNode, poolId: CognitoUserPoolId): CognitoUserCollection;
    static cognitoUser(parent: ApiNode, userName: string, poolId: CognitoUserPoolId): CognitoUser;
    static sns(parent: ApiNode): Sns;
    static snsTopicCollection(parent: ApiNode): SnsTopicCollection;
    static snsTopic(parent: ApiNode, arn: string): SnsTopic;
    static sqs(parent: ApiNode): Sqs;
    static sqsQueueCollection(parent: ApiNode): SqsQueueCollection;
    static sqsQueue(parent: ApiNode, url: string): SqsQueue;
}
